stages:
  - build
  - test

### Build

# Build the Fencer Docker image
compile:
  stage: build
  image: nixos/nix
  environment:
    # GitLab provides the Cachix signing key to all jobs tagged with
    # 'compile' (i.e. only this job)
    name: compile
  script:
    # Build the Docker image and create a list of paths to push to Cachix.
    # The secret signing key should not be available to the build process.
    - ( unset CACHIX_SIGNING_KEY;
        nix-env -iA cachix -f https://cachix.org/api/v1/install;
        cachix use fencer;
        imagepath=$(nix-build docker.nix);
        cp $imagepath fencer.tar.gz;
        nix-store -qR --include-outputs $(nix-instantiate docker.nix) > paths
      )
    # Push built paths to Cachix
    - cachix push fencer < paths
  artifacts:
    paths:
      - fencer.tar.gz

# Build the Go integration test
compile_integration:
  stage: build
  image: nixos/nix
  script:
    - imagepath=$(nix-build test_integration_go/docker.nix)
    - cp $imagepath test_integration_go.tar.gz
  artifacts:
    paths:
      - test_integration_go.tar.gz

### Test

integration:
  stage: test
  image: docker:19.03.0
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: "/certs"
  services:
    - docker:19.03.0-dind
  before_script:
    - docker info
  script:
    # Create a Docker network for the containers
    - docker network create test

    # Run Fencer
    - docker load -i fencer.tar.gz
    - docker run
        -v $(pwd)/test_integration_go/config:/srv/runtime_data/current
        -e RUNTIME_SUBDIRECTORY=ratelimit
        -p 50051:50051
        --name fencer
        --network test
        --detach
        juspay/fencer
    - sleep 5

    # Run the test
    - docker load -i test_integration_go.tar.gz
    - docker run
        -e GRPC_HOST=fencer
        --network test
        test_integration_go
